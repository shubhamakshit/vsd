name: Rust CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        target: [x86_64-unknown-linux-gnu, x86_64-apple-darwin, x86_64-pc-windows-msvc]
        include:
          - os: ubuntu-latest
            target: aarch64-linux-android
            android: true

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Install Dependencies
      if: matrix.android == 'true'
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip
        wget https://dl.google.com/android/repository/android-ndk-r22b-linux-x86_64.zip
        unzip android-ndk-r22b-linux-x86_64.zip
        rm android-ndk-r22b-linux-x86_64.zip
        rustup target add aarch64-linux-android

    - name: Install Protobuf (Linux & macOS)
      if: runner.os != 'Windows'
      run: |
        if [ ${{ runner.os }} == 'Linux' ]; then
          sudo apt-get install -y protobuf-compiler
        elif [ ${{ runner.os }} == 'macOS' ]; then
          brew install protobuf
        fi

    - name: Install Rust Targets (Non-Android)
      if: matrix.android != 'true'
      run: |
        rustup target add ${{ matrix.target }}

    - name: Set Up Cargo Configuration for Android
      if: matrix.android == 'true'
      run: |
        printf '\n[target.aarch64-linux-android]\nlinker = "aarch64-linux-android30-clang"\n' >> $HOME/.cargo/config.toml

    - name: Build
      run: |
        if [ ${{ matrix.android }} == 'true' ]; then
          PATH=$PWD/android-ndk-r22b/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH \
          cargo build -p vsd --release --target ${{ matrix.target }} --no-default-features --features "rustls-tls-native-roots"
        else
          cargo build -p vsd --release --target ${{ matrix.target }} --features "native-tls"
        fi

    - name: Run Tests
      run: |
        if [ ${{ matrix.android }} != 'true' ]; then
          cargo test --verbose
        fi
