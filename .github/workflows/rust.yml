name: Build and Upload Artifacts

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target: [any, android-linux, android-termux, darwin-linux, linux-musl]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install dependencies
        run: |
          case ${{ matrix.target }} in
            android-linux)
              sudo apt-get update
              sudo apt-get install -y wget unzip
              wget https://dl.google.com/android/repository/android-ndk-r22b-linux-x86_64.zip
              unzip android-ndk-r22b-linux-x86_64.zip
              rm android-ndk-r22b-linux-x86_64.zip
              rustup target add aarch64-linux-android
              echo '[target.aarch64-linux-android]\nlinker = "aarch64-linux-android30-clang"' >> $HOME/.cargo/config.toml
              ;;
            android-termux)
              sudo apt-get update
              sudo apt-get install -y git protobuf-compiler
              rustup target add aarch64-linux-android
              ;;
            darwin-linux)
              sudo apt-get update
              sudo apt-get install -y llvm
              git clone https://github.com/tpoechtrager/osxcross
              curl -L https://github.com/joseluisq/macosx-sdks/releases/download/13.1/MacOSX13.1.sdk.tar.xz -o osxcross/tarballs/MacOSX13.1.sdk.tar.xz
              cd osxcross
              ./tools/get_dependencies.sh
              UNATTENDED=1 SDK_VERSION=13.1 ./build.sh
              cd ..
              rustup target add x86_64-apple-darwin
              echo '[target.x86_64-apple-darwin]\nlinker = "x86_64-apple-darwin21.4-clang"' >> $HOME/.cargo/config.toml
              ;;
            linux-musl)
              sudo apt-get update
              sudo apt-get install -y build-essential
              git clone https://github.com/richfelker/musl-cross-make --depth 1
              cd musl-cross-make
              TARGET=x86_64-linux-musl make install
              find output/**/*/libstdc++.so* -delete
              cd ..
              rustup target add x86_64-unknown-linux-musl
              echo '[target.x86_64-unknown-linux-musl]\nlinker = "x86_64-linux-musl-gcc"' >> $HOME/.cargo/config.toml
              ;;
          esac

      - name: Build project
        run: |
          case ${{ matrix.target }} in
            any)
              cargo build -p vsd --release
              ;;
            android-linux)
              PATH=$PWD/android-ndk-r22b/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH \
              RUSTFLAGS="-C link-args=-Wl,-rpath=/data/data/com.termux/files/usr/lib -C link-args=-Wl,--enable-new-dtags" \
              cargo build -p vsd --release --target aarch64-linux-android --no-default-features --features "rustls-tls"
              ;;
            android-termux)
              AR=llvm-ar \
              OPENSSL_INCLUDE_DIR=$PREFIX/include/openssl \
              OPENSSL_LIB_DIR=$PREFIX/lib \
              OPENSSL_NO_VENDOR=true \
              cargo build -p vsd --release --no-default-features --features "native-tls"
              ;;
            darwin-linux)
              PATH=$PWD/osxcross/target/bin:$PATH \
              LD_LIBRARY_PATH=$PWD/osxcross/target/lib:$LD_LIBRARY_PATH \
              MACOSX_DEPLOYMENT_TARGET=13.1 \
              CC=x86_64-apple-darwin21.4-clang \
              CXX=x86_64-apple-darwin21.4-clang++ \
              AR=x86_64-apple-darwin21.4-ar \
              cargo build -p vsd --release --target x86_64-apple-darwin
              ;;
            linux-musl)
              PATH=$PWD/musl-cross-make/output/bin:$PATH \
              CC=x86_64-linux-musl-gcc \
              CXX=x86_64-linux-musl-g++ \
              AR=x86_64-linux-musl-ar \
              cargo build -p vsd --release --target x86_64-unknown-linux-musl --no-default-features --features "browser,rustls-tls-webpki-roots"
              ;;
          esac

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: vsd-${{ matrix.target }}
          path: |
            ./target/release/vsd
            ./target/aarch64-linux-android/release/vsd
            ./target/x86_64-apple-darwin/release/vsd
            ./target/x86_64-unknown-linux-musl/release/vsd
